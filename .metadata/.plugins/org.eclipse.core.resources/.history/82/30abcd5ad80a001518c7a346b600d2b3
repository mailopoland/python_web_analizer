#standard python libs
import logging
import time

#third party libs
from daemon import runner
from logic.settings import Settings

class Webdeamon():
    
    def __init__(self):
        self.stdin_path = '/dev/null'
        self.stdout_path = '/dev/tty'
        self.stderr_path = '/dev/tty'
        #todo niech tworzy plik jezeli nie istnieje i bazuje na cur user (uniwersalnie)
        self.pidfile_path =  Settings.process()
        self.pidfile_timeout = 5
            
    def run(self):
        while True:
            #Main code goes here ...
            #Note that logger level needs to be set to logging.DEBUG before this shows up in the logs
            #logger.debug("Debug message") #this not display for it is wrong lvl set
            #logger.info("Info message")
            logger.info("Napierdalam za trzech ol jech")
            #logger.warn("Warning message")
            #logger.error("Error message")
            time.sleep(10)
    
app = Webdeamon()
logger = logging.getLogger("DaemonLog")
logger.setLevel(logging.INFO)
formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
#todo niech tworzy plik jezeli nie istnieje i bazuje na cur user (uniwersalnie)
handler = logging.FileHandler(Settings().result())
handler.setFormatter(formatter)
logger.addHandler(handler)

daemon_runner = runner.DaemonRunner(app)
#This ensures that the logger file handle does not get closed during daemonization
daemon_runner.daemon_context.files_preserve=[handler.stream]
daemon_runner.do_action()